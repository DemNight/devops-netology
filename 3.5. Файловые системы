# 3.5. Файловые системы

1) Узнайте о sparse (разряженных) файлах.

```
Сделано
```

2) Могут ли файлы, являющиеся жесткой ссылкой на один объект, иметь разные права доступа и владельца? Почему?

```
Нет, жёсткая ссылка является копией идентификатора файла (inote).

потестил, создав файлик и хардлинк к нему:

vagrant@vagrant:~$ mcedit test-1
vagrant@vagrant:~$ stat --format=%h test-1
1
vagrant@vagrant:~$ ln test-1 test-1_hardlink
vagrant@vagrant:~$ stat --format=%h test-1
2
vagrant@vagrant:~$ stat --format=%i test-1; stat --format=%i test-1_hardlink
131102
131102
vagrant@vagrant:~$ ls -ilh
total 16K
131098 -rw-r--r-- 1 root    root    1.3K Dec  5  2002 jcameron-key.asc
131102 -rw-rw-r-- 2 vagrant vagrant   11 Nov 29 17:52 test-1
131102 -rw-rw-r-- 2 vagrant vagrant   11 Nov 29 17:52 test-1_hardlink
131097 drwxrwxrwx 2 root    root    4.0K Nov 28 18:49 vm
vagrant@vagrant:~$ chmod 0754 test-1_hardlink
vagrant@vagrant:~$ ls -ilh
total 16K
131098 -rw-r--r-- 1 root    root    1.3K Dec  5  2002 jcameron-key.asc
131102 -rwxr-xr-- 2 vagrant vagrant   11 Nov 29 17:52 test-1
131102 -rwxr-xr-- 2 vagrant vagrant   11 Nov 29 17:52 test-1_hardlink
131097 drwxrwxrwx 2 root    root    4.0K Nov 28 18:49 vm
vagrant@vagrant:~$

```

3) Сделайте vagrant destroy на имеющийся инстанс Ubuntu. Замените содержимое Vagrantfile следующим:

Vagrant.configure("2") do |config|
  config.vm.box = "bento/ubuntu-20.04"
  config.vm.provider :virtualbox do |vb|
    lvm_experiments_disk0_path = "/tmp/lvm_experiments_disk0.vmdk"
    lvm_experiments_disk1_path = "/tmp/lvm_experiments_disk1.vmdk"
    vb.customize ['createmedium', '--filename', lvm_experiments_disk0_path, '--size', 2560]
    vb.customize ['createmedium', '--filename', lvm_experiments_disk1_path, '--size', 2560]
    vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', lvm_experiments_disk0_path]
    vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 2, '--device', 0, '--type', 'hdd', '--medium', lvm_experiments_disk1_path]
  end
end

```
сделано

vagrant@vagrant:~$ lsblk
NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                    8:0    0   64G  0 disk
├─sda1                 8:1    0  512M  0 part /boot/efi
├─sda2                 8:2    0    1K  0 part
└─sda5                 8:5    0 63.5G  0 part
  ├─vgvagrant-root   253:0    0 62.6G  0 lvm  /
  └─vgvagrant-swap_1 253:1    0  980M  0 lvm  [SWAP]
sdb                    8:16   0  2.5G  0 disk
sdc                    8:32   0  2.5G  0 disk

```

4) Используя fdisk, разбейте первый диск на 2 раздела: 2 Гб, оставшееся пространство.
```
sdb                    8:16   0  2.5G  0 disk
├─sdb1                 8:17   0    2G  0 part
└─sdb2                 8:18   0  500M  0 part
```

5) Используя sfdisk, перенесите данную таблицу разделов на второй диск.

```
vagrant@vagrant:~$ sudo -i
root@vagrant:~# sfdisk -d /dev/sdb|sfdisk --force /dev/sdc
Checking that no-one is using this disk right now ... OK

Disk /dev/sdc: 2.51 GiB, 2684354560 bytes, 5242880 sectors
Disk model: VBOX HARDDISK
Units: sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes

>>> Script header accepted.
>>> Script header accepted.
>>> Script header accepted.
>>> Script header accepted.
>>> Script header accepted.
>>> Script header accepted.
>>> Created a new GPT disklabel (GUID: CE8B8612-8CBF-3A41-8655-F8A6B2B62B50).
/dev/sdc1: Created a new partition 1 of type 'Linux filesystem' and of size 2 GiB.
/dev/sdc2: Created a new partition 2 of type 'Linux filesystem' and of size 500 MiB.
/dev/sdc3: Done.

New situation:
Disklabel type: gpt
Disk identifier: CE8B8612-8CBF-3A41-8655-F8A6B2B62B50

Device       Start     End Sectors  Size Type
/dev/sdc1     2048 4196351 4194304    2G Linux filesystem
/dev/sdc2  4196353 5220351 1023999  500M Linux filesystem

The partition table has been altered.
Calling ioctl() to re-read partition table.
Syncing disks.
```

```
vagrant@vagrant:~$ lsblk
NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
sda                    8:0    0   64G  0 disk
├─sda1                 8:1    0  512M  0 part /boot/efi
├─sda2                 8:2    0    1K  0 part
└─sda5                 8:5    0 63.5G  0 part
  ├─vgvagrant-root   253:0    0 62.6G  0 lvm  /
  └─vgvagrant-swap_1 253:1    0  980M  0 lvm  [SWAP]
sdb                    8:16   0  2.5G  0 disk
├─sdb1                 8:17   0    2G  0 part
└─sdb2                 8:18   0  500M  0 part
sdc                    8:32   0  2.5G  0 disk
├─sdc1                 8:33   0    2G  0 part
└─sdc2                 8:34   0  500M  0 part
```

6) Соберите mdadm RAID1 на паре разделов 2 Гб.
```
vagrant@vagrant:~$ sudo -i
root@vagrant:~# mdadm --create --verbose /dev/md1 --level=1 --raid-devices=2 /dev/sdb1 /dev/sdc1
mdadm: Note: this array has metadata at the start and
    may not be suitable as a boot device.  If you plan to
    store '/boot' on this device please ensure that
    your boot-loader understands md/v1.x metadata, or use
    --metadata=0.90
mdadm: size set to 2094080K
Continue creating array? y
mdadm: Defaulting to version 1.2 metadata
mdadm: array /dev/md1 started.
root@vagrant:~# lsblk
NAME                 MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINT
sda                    8:0    0   64G  0 disk
├─sda1                 8:1    0  512M  0 part  /boot/efi
├─sda2                 8:2    0    1K  0 part
└─sda5                 8:5    0 63.5G  0 part
  ├─vgvagrant-root   253:0    0 62.6G  0 lvm   /
  └─vgvagrant-swap_1 253:1    0  980M  0 lvm   [SWAP]
sdb                    8:16   0  2.5G  0 disk
├─sdb1                 8:17   0    2G  0 part
│ └─md1                9:1    0    2G  0 raid1
└─sdb2                 8:18   0  500M  0 part
sdc                    8:32   0  2.5G  0 disk
├─sdc1                 8:33   0    2G  0 part
│ └─md1                9:1    0    2G  0 raid1
└─sdc2                 8:34   0  500M  0 part
```

7) Соберите mdadm RAID0 на второй паре маленьких разделов.

```
root@vagrant:~# mdadm --create --verbose /dev/md0 --level=0 --raid-devices=2 /dev/sdb2 /dev/sdc2
mdadm: chunk size defaults to 512K
mdadm: Defaulting to version 1.2 metadata
mdadm: array /dev/md0 started.
root@vagrant:~# lsblk
NAME                 MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINT
sda                    8:0    0   64G  0 disk
├─sda1                 8:1    0  512M  0 part  /boot/efi
├─sda2                 8:2    0    1K  0 part
└─sda5                 8:5    0 63.5G  0 part
  ├─vgvagrant-root   253:0    0 62.6G  0 lvm   /
  └─vgvagrant-swap_1 253:1    0  980M  0 lvm   [SWAP]
sdb                    8:16   0  2.5G  0 disk
├─sdb1                 8:17   0    2G  0 part
│ └─md1                9:1    0    2G  0 raid1
└─sdb2                 8:18   0  500M  0 part
  └─md0                9:0    0  995M  0 raid0
sdc                    8:32   0  2.5G  0 disk
├─sdc1                 8:33   0    2G  0 part
│ └─md1                9:1    0    2G  0 raid1
└─sdc2                 8:34   0  500M  0 part
  └─md0                9:0    0  995M  0 raid0
```

8) Создайте 2 независимых PV на получившихся md-устройствах.
```
root@vagrant:~# pvcreate /dev/md1 /dev/md0
  Physical volume "/dev/md1" successfully created.
  Physical volume "/dev/md0" successfully created.
  
root@vagrant:~# pvs
  PV         VG        Fmt  Attr PSize   PFree
  /dev/md0             lvm2 ---  995.00m 995.00m
  /dev/md1             lvm2 ---   <2.00g  <2.00g
  /dev/sda5  vgvagrant lvm2 a--  <63.50g      0
```

9) Создайте общую volume-group на этих двух PV.

```
root@vagrant:~# vgcreate test_vg /dev/md1 /dev/md0
  Volume group "test_vg" successfully created
root@vagrant:~# vgs
  VG        #PV #LV #SN Attr   VSize   VFree
  test_vg     2   0   0 wz--n-   2.96g 2.96g
  vgvagrant   1   2   0 wz--n- <63.50g    0
```

10) Создайте LV размером 100 Мб, указав его расположение на PV с RAID0.

```
root@vagrant:~# lvcreate -L 100Mb -n test_lv /dev/test_vg /dev/md0
  Logical volume "test_lv" created.
  
root@vagrant:~# lvs
  LV      VG        Attr       LSize   Pool Origin Data%  Meta%  Move Log Cpy%Sync Convert
  test_lv test_vg   -wi-a----- 100.00m
  root    vgvagrant -wi-ao---- <62.54g
  swap_1  vgvagrant -wi-ao---- 980.00m
```

11) Создайте mkfs.ext4 ФС на получившемся LV.

```
root@vagrant:~# mkfs.ext4 /dev/test_vg/test_lv
mke2fs 1.45.5 (07-Jan-2020)
Creating filesystem with 25600 4k blocks and 25600 inodes

Allocating group tables: done
Writing inode tables: done
Creating journal (1024 blocks): done
Writing superblocks and filesystem accounting information: done
```

12) Смонтируйте этот раздел в любую директорию, например, /tmp/new.

```
root@vagrant:~# mkdir /tmp/new
root@vagrant:~# mount /dev/test_vg/test_lv /tmp/new
```

13) Поместите туда тестовый файл, например wget https://mirror.yandex.ru/ubuntu/ls-lR.gz -O /tmp/new/test.gz.

```
сделано (командой из вопроса)

root@vagrant:~# ls -l /tmp/new
total 22064
drwx------ 2 root root    16384 Nov 29 19:15 lost+found
-rw-r--r-- 1 root root 22574425 Nov 29 09:55 test.gz
```

14) Прикрепите вывод lsblk

```
root@vagrant:~# lsblk
NAME                  MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINT
sda                     8:0    0   64G  0 disk
├─sda1                  8:1    0  512M  0 part  /boot/efi
├─sda2                  8:2    0    1K  0 part
└─sda5                  8:5    0 63.5G  0 part
  ├─vgvagrant-root    253:0    0 62.6G  0 lvm   /
  └─vgvagrant-swap_1  253:1    0  980M  0 lvm   [SWAP]
sdb                     8:16   0  2.5G  0 disk
├─sdb1                  8:17   0    2G  0 part
│ └─md1                 9:1    0    2G  0 raid1
└─sdb2                  8:18   0  500M  0 part
  └─md0                 9:0    0  995M  0 raid0
    └─test_vg-test_lv 253:2    0  100M  0 lvm   /tmp/new
sdc                     8:32   0  2.5G  0 disk
├─sdc1                  8:33   0    2G  0 part
│ └─md1                 9:1    0    2G  0 raid1
└─sdc2                  8:34   0  500M  0 part
  └─md0                 9:0    0  995M  0 raid0
    └─test_vg-test_lv 253:2    0  100M  0 lvm   /tmp/new
```

15) Протестируйте целостность файла:

root@vagrant:~# gzip -t /tmp/new/test.gz
root@vagrant:~# echo $?
0

```
root@vagrant:~# gzip -t /tmp/new/test.gz ; echo $?
0
```

16) Используя pvmove, переместите содержимое PV с RAID0 на RAID1

```
root@vagrant:~# pvmove /dev/md0 /dev/md1
  /dev/md0: Moved: 20.00%
  /dev/md0: Moved: 100.00%
```

17) Сделайте --fail на устройство в вашем RAID1 md.

```
root@vagrant:~# mdadm /dev/md1 --fail /dev/sdc1
mdadm: set /dev/sdc1 faulty in /dev/md1
```

18) Подтвердите выводом dmesg, что RAID1 работает в деградированном состоянии.

```
root@vagrant:~# dmesg | grep md1
[ 2708.736636] md/raid1:md1: not clean -- starting background reconstruction
[ 2708.736638] md/raid1:md1: active with 2 out of 2 mirrors
[ 2708.736658] md1: detected capacity change from 0 to 2144337920
[ 2708.739726] md: resync of RAID array md1
[ 2719.088768] md: md1: resync done.
[ 5396.689175] md/raid1:md1: Disk failure on sdc1, disabling device.
               md/raid1:md1: Operation continuing on 1 devices.
```

19) Протестируйте целостность файла, несмотря на "сбойный" диск он должен продолжать быть доступен:

root@vagrant:~# gzip -t /tmp/new/test.gz
root@vagrant:~# echo $?
0

```
root@vagrant:~# gzip -t /tmp/new/test.gz ; echo $?
0
```

20) Погасите тестовый хост, vagrant destroy.

```
Сделано
```




